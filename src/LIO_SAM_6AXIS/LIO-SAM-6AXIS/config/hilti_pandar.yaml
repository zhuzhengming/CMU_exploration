lio_sam_6axis:

  # Topics
  pointCloudTopic: "/hesai/pandar"               # Point cloud data
  # imuTopic: "/alphasense/imu"
  imuTopic: "/livox/imu"

#  pointCloudTopic: "/sync_hesai"               # Point cloud data
#  imuTopic: "/sync_imu"

  odomTopic: "odometry/imu"                   # IMU pre-preintegration odometry, same frequency as IMU
  gpsTopic: "gps_odom"                   # GPS odometry topic from navsat, see module_navsat.launch file

  # Frames
  lidarFrame: "base_link"
  baselinkFrame: "base_link"
  odometryFrame: "odom"
  mapFrame: "map"

  # GPS Settings
  useGps: false
  useImuHeadingInitialization: false           # if using GPS data, set to "true"
  useGpsElevation: false                      # if GPS elevation is bad, set to "false"
  gpsCovThreshold: 2.0                        # m^2, threshold for using GPS data
  poseCovThreshold: 0.02                      # m^2, threshold for using GPS data

  # Export settings
  savePCD: true                              # https://github.com/TixiaoShan/LIO-SAM/issues/3
#  savePCDDirectory: "/home/xchu/ramlab_ws/src/LIO-SAM-6AXIS/data/"        # in your home folder, starts and ends with "/". Warning: the code deletes "LOAM" folder then recreates it. See "mapOptimization" for implementation
  savePCDDirectory: "/home/jin/my_project/gml_ws/src/LIO_SAM_6AXIS/LIO-SAM-6AXIS/data"        # in your home folder, starts and ends with "/". Warning: the code deletes "LOAM" folder then recreates it. See "mapOptimization" for implementation
  scene_name: "exp04"

  #   Sensor Settings
  sensor: hesai                            # lidar sensor type, 'velodyne' or 'ouster' or 'livox'
  N_SCAN: 32                                  # number of lidar channel (i.e., Velodyne/Ouster: 16, 32, 64, 128, Livox Horizon: 6)
#  N_SCAN: 16                                  # number of lidar channel (i.e., Velodyne/Ouster: 16, 32, 64, 128, Livox Horizon: 6)
  Horizon_SCAN: 2000                          # lidar horizontal resolution (Velodyne:1800, Ouster:512,1024,2048, Livox Horizon: 4000)
  downsampleRate: 1                           # default: 1. Downsample your data if too many points. i.e., 16 = 64 / 4, 16 = 16 / 1
#  lidarMinRange: 0.5                       # default: 1.0, minimum lidar range to be used
#  lidarMaxRange: 60.0                       # default: 1000.0, maximum lidar range to be used
  lidarMinRange: 1.0                       # default: 1.0, minimum lidar range to be used
  lidarMaxRange: 100.0                       # default: 1000.0, maximum lidar range to be used

  # IMU Settings
  imuFrequence: 400
#  imuFrequence: 200
#  imuAccNoise: 0.0001688956233495657
  imuAccNoise: 0.1
#  imuGyrNoise: 0.0010679343003532472
  imuGyrNoise: 0.01
#  imuAccBiasN: 9.782812831313576e-07
  imuAccBiasN: 0.001
  #  sometimes we can get the 3 axis calibration result of acc or gyro
  #  imuAccBias_N: [ 0.06080652138668933, 0.08353074835853214, 0.057072968234636895 ]
  imuAccBias_N: [ 0.001,  0.001,  0.001 ]
#  imuGyrBiasN: 2.6541629581345176e-05
  imuGyrBiasN: 0.001
  imuGyrBias_N: [ 0.001,  0.001,  0.001 ]
  #  imuGyrBias_N: [ -0.0015351229643790084, -0.0013449146576507546, 0.00030127855524786183 ]
  imuGravity: 9.81
  imuGravity_N: [ 0.01165152782783894, 9.804989173462031, -0.008749296634685332 ]
  imuRPYWeight: 0.01

  #  # Extrinsics (lidar -> IMU)
  imu_type: 0   # 0: 6axis, 1:9 axis
  imu_sensor: 1   # 0: unit is gravity, 1: unit is m/s^2
  extrinsicTrans: [ -0.006730146149038548, -0.006897049862999071,0.049898628062256645 ]
  extrinsicRot: [ 0.006609639848469365, -0.9999773650294649, 0.0012578115132016717,
                  -0.9999762249571927, -0.006612093869054189, -0.0019569708811106104,
                  0.001965243352927244, -0.0012448467359610184, -0.9999972940839232 ]
  extrinsicRPY: [ 0.006609639848469365, -0.9999773650294649, 0.0012578115132016717,
                  -0.9999762249571927, -0.006612093869054189, -0.0019569708811106104,
                  0.001965243352927244, -0.0012448467359610184, -0.9999972940839232 ]

#  extrinsicTrans: [ 0.0, 0.0, 0.0 ]
##  extrinsicTrans: [ 0.0, 0.0, 0.045 ]
#  extrinsicRot: [ 1, 0, 0,
#                  0, 1, 0,
#                  0, 0, 1 ]
#  extrinsicRPY: [ 1, 0, 0,
#                  0, 1, 0,
#                  0, 0, 1 ]


  # LOAM feature threshold
  edgeThreshold: 1.0
  surfThreshold: 0.1
#  edgeThreshold: 0.9
#  surfThreshold: 0.1
  edgeFeatureMinValidNum: 10
  surfFeatureMinValidNum: 100

  # voxel filter paprams
  odometrySurfLeafSize: 0.2                     # default: 0.4 - outdoor, 0.2 - indoor
  mappingCornerLeafSize: 0.1                    # default: 0.2 - outdoor, 0.1 - indoor
  mappingSurfLeafSize: 0.2                      # default: 0.4 - outdoor, 0.2 - indoor

#  odometrySurfLeafSize: 0.1                     # default: 0.4 - outdoor, 0.2 - indoor
#  mappingCornerLeafSize: 0.05                    # default: 0.2 - outdoor, 0.1 - indoor
#  mappingSurfLeafSize: 0.1                      # default: 0.4 - outdoor, 0.2 - indoor

  # robot motion constraint (in case you are using a 2D robot)
  z_tollerance: 1000                            # meters
  rotation_tollerance: 1000                     # radians

  # CPU Params
#  numberOfCores: 20                              # number of cores for mapping optimization
  numberOfCores: 8                              # number of cores for mapping optimization
  mappingProcessInterval: 0.15                  # seconds, regulate mapping frequency
#  mappingProcessInterval: 0.10                  # seconds, regulate mapping frequency

  # Surrounding map
  surroundingkeyframeAddingDistThreshold: 0.2   # meters, regulate keyframe adding threshold
  surroundingkeyframeAddingAngleThreshold: 0.2  # radians, regulate keyframe adding threshold
  surroundingKeyframeDensity: 0.5              # meters, downsample surrounding keyframe poses
  surroundingKeyframeSearchRadius: 5.0         # meters, within n meters scan-to-map optimization (when loop closure disabled)

  # Loop closure
  loopClosureEnableFlag: false
  loopClosureFrequency: 1.0                     # Hz, regulate loop closure constraint add frequency
  surroundingKeyframeSize: 30                   # submap size (when loop closure enabled)
  historyKeyframeSearchRadius: 30.0             # meters, key frame that is within n meters from current pose will be considerd for loop closure
  historyKeyframeSearchTimeDiff: 20.0           # seconds, key frame that is n seconds older will be considered for loop closure
  historyKeyframeSearchNum: 20                  # number of hostory key frames will be fused into a submap for loop closure
  historyKeyframeFitnessScore: 0.9            # icp threshold, the smaller the better alignment

  # Visualization
  globalMapVisualizationSearchRadius: 1000.0    # meters, global map visualization radius
  globalMapVisualizationPoseDensity: 2.0       # meters, global map visualization keyframe density
#  globalMapVisualizationLeafSize: 0.5           # meters, global map visualization cloud density
  globalMapVisualizationLeafSize: 0.1           # meters, global map visualization cloud density


# Navsat (convert GPS coordinates to Cartesian)
navsat:
  frequency: 50
  wait_for_datum: false
  delay: 0.0
  magnetic_declination_radians: 0
  yaw_offset: 0
  zero_altitude: true
  broadcast_utm_transform: false
  broadcast_utm_transform_as_parent_frame: false
  publish_filtered_gps: false

# EKF for Navsat
ekf_gps:
  publish_tf: false
  map_frame: map
  odom_frame: odom
  base_link_frame: base_link
  world_frame: odom

  frequency: 50
  two_d_mode: false
  sensor_timeout: 0.01
  # -------------------------------------
  # External IMU:
  # -------------------------------------
  imu0: imu_correct
  # make sure the input is aligned with ROS REP105. "imu_correct" is manually transformed by myself. EKF can also transform the data using tf between your imu and base_link
  imu0_config: [ false, false, false,
                 true,  true,  true,
                 false, false, false,
                 false, false, true,
                 true,  true,  true ]
  imu0_differential: false
  imu0_queue_size: 50
  imu0_remove_gravitational_acceleration: true
  # -------------------------------------
  # Odometry (From Navsat):
  # -------------------------------------
  odom0: odometry/gps
  odom0_config: [ true,  true,  true,
                  false, false, false,
                  false, false, false,
                  false, false, false,
                  false, false, false ]
  odom0_differential: false
  odom0_queue_size: 10

  #                            x     y     z     r     p     y   x_dot  y_dot  z_dot  r_dot p_dot y_dot x_ddot y_ddot z_ddot
  process_noise_covariance: [ 1.0,  0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,    0,    0,      0,
                              0,    1.0,  0,    0,    0,    0,    0,     0,     0,     0,    0,    0,    0,    0,      0,
                              0,    0,    10.0, 0,    0,    0,    0,     0,     0,     0,    0,    0,    0,    0,      0,
                              0,    0,    0,    0.03, 0,    0,    0,     0,     0,     0,    0,    0,    0,    0,      0,
                              0,    0,    0,    0,    0.03, 0,    0,     0,     0,     0,    0,    0,    0,    0,      0,
                              0,    0,    0,    0,    0,    0.1,  0,     0,     0,     0,    0,    0,    0,    0,      0,
                              0,    0,    0,    0,    0,    0,    0.25,  0,     0,     0,    0,    0,    0,    0,      0,
                              0,    0,    0,    0,    0,    0,    0,     0.25,  0,     0,    0,    0,    0,    0,      0,
                              0,    0,    0,    0,    0,    0,    0,     0,     0.04,  0,    0,    0,    0,    0,      0,
                              0,    0,    0,    0,    0,    0,    0,     0,     0,     0.01, 0,    0,    0,    0,      0,
                              0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0.01, 0,    0,    0,      0,
                              0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0.5,  0,    0,      0,
                              0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,    0.01, 0,      0,
                              0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,    0,    0.01,   0,
                              0,    0,    0,    0,    0,    0,    0,     0,     0,     0,    0,    0,    0,    0,      0.015 ]
